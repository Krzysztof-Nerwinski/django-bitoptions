language: python
python:
  - 2.7
  - 3.2
  - 3.3
  - 3.4
  - 3.5
  - pypy
  - pypy3
install:
  - if [[ $TRAVIS_PYTHON_VERSION = '3.2' ]]; then pip install 'coverage<4.0.0'; fi
  - pip install coveralls $DJANGO
  - if [[ $DB = 'mariadb' ]]; then pip install mysqlclient; fi
  - if [[ $DB = 'mysql' ]]; then pip install mysqlclient; fi
  - if [[ $DB = 'postgres' ]]; then pip install psycopg2cffi; fi
env:
  - DJANGO='django>=1.8,<1.9' DB=mariadb
  - DJANGO='django>=1.8,<1.9' DB=mysql
  - DJANGO='django>=1.8,<1.9' DB=postgres
  - DJANGO='django>=1.8,<1.9' DB=sqlite

  - DJANGO='django>=1.9,<1.10' DB=mariadb
  - DJANGO='django>=1.9,<1.10' DB=mysql
  - DJANGO='django>=1.9,<1.10' DB=postgres
  - DJANGO='django>=1.9,<1.10' DB=sqlite
matrix:
  exclude:
    - python: 3.2
      env: DJANGO='django>=1.8,<1.9' DB=mariadb
    - python: 3.2
      env: DJANGO='django>=1.8,<1.9' DB=mysql
    - python: 3.2
      env: DJANGO='django>=1.9,<1.10' DB=mariadb
    - python: 3.2
      env: DJANGO='django>=1.9,<1.10' DB=mysql
    - python: 3.2
      env: DJANGO='django>=1.9,<1.10' DB=postgres
    - python: 3.2
      env: DJANGO='django>=1.9,<1.10' DB=sqlite
    - python: 3.3
      env: DJANGO='django>=1.9,<1.10' DB=mariadb
    - python: 3.3
      env: DJANGO='django>=1.9,<1.10' DB=mysql
    - python: 3.3
      env: DJANGO='django>=1.9,<1.10' DB=postgres
    - python: 3.3
      env: DJANGO='django>=1.9,<1.10' DB=sqlite
before_script:
  - if [[ $DB = 'mariadb' ]]; then mysql -e 'create database bitoptions'; fi
  - if [[ $DB = 'mysql' ]]; then mysql -e 'create database bitoptions'; fi
  - if [[ $DB = 'postgres' ]]; then psql -c 'create database bitoptions;' -U postgres; fi
script: coverage run --source=bitoptions testproject/manage.py test testapp
after_success:
  coveralls
